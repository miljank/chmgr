NAME="backup"
DESC="Creates a configuration backup of a target"

backup_parse_input() {
    while [ $# -gt 0 ]; do
        case $1 in
            '-t') SHORTNAME=$2; TARGET=${CHROOTDIR}/$2; shift;;
            '-d') DESTINATION=$2; break;;
            '-h') backup_help;;
               *) echo "error: Unknown argument"; exit 1;;
        esac
        shift
    done
    [[ -z ${TARGET} ]]        && echo "error: Target is required"                && backup_help
    [[ ! -d ${TARGET} ]]      && echo "error: Target does not exist"             && exit 1
    [[ -z ${DESTINATION} ]]   && echo "error: Backup destination is required"    && backup_help
    [[ ! -d ${DESTINATION} ]] && echo "error: Backup destination does not exist" && exit 1
}

backup_help() {
    echo "Usage: $(basename $0) backup -t <TARGET> -i <DESTINATION> [-h]"
    echo
    echo "Creates a configuration backup of a target"
    echo -e "-t\tTarget environment"
    echo -e "-d\tBackup destination"
    echo -e "-h\tThis help message"
    echo
    exit 1
}

backup() {
    TMPDIR=${DESTINATION}/.tmp
    FILENAME=${DESTINATION}/${SHORTNAME}-$(date +'%Y-%m-%d').tar.gz
    mkdir -p ${TMPDIR}/${SHORTNAME}

    echo -n "* Copying files ... "
    cp -a ${TARGET}/etc/ ${TMPDIR}/${SHORTNAME}
    check_status $? "Could not save files"
    [[ -f ${TARGET}/.install  ]] && cp -a ${TARGET}/.install  ${TMPDIR}/${SHORTNAME}
    [[ -f ${TARGET}/.protect  ]] && cp -a ${TARGET}/.protect  ${TMPDIR}/${SHORTNAME}
    [[ -f ${TARGET}/.requires ]] && cp -a ${TARGET}/.requires ${TMPDIR}/${SHORTNAME}
    [[ -f ${TARGET}/.services ]] && cp -a ${TARGET}/.services ${TMPDIR}/${SHORTNAME}
    echo "done"

    echo -n "* Compressing files ... "
    cd ${TMPDIR}
    tar zcf ${FILENAME} ${SHORTNAME}
    check_status $? "Could not compress files"
    echo "done"

    echo -n "* Cleaning up ... "
    rm -rf ${TMPDIR}
    echo "done"

    echo
    echo "Target backed up: ${FILENAME}"
}
